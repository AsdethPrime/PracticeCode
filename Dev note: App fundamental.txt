There are 4 different types of app components:
1. Activities
2. Service
3. Broadcast Receiver
4. Content Provider

An Activity is the entry point for interacting with the user. It represents a single screen with user interface.You implement an Activity as a subclass of Active Class [ 	android.app.Activity ].

A service is a general purpose entery point for keeping an app running on the background. A service does not provide a user interface. Another component, such as an Activity, can start a service and let it run or bind to it in order to interact with it.A started service tells the system to keep them running until their work is complete. A bound service runs because some other app has said it wants to make use of the service. A Service is implemented as a subclass of Service Class [ andoid.app.Service ] 

A broadcast receiver is a component that enables Android OS to deliver events to app outside a regular user flow, allowing the app to respond to system wide broadcase. As broadcase receivers are another well defined entry into the app, Android OS can deliver a broadcasts even to apps that aren't currently running. A broadcast receiver is implemented as a subclass of BroadcastReceiver clas [ 	android.content.BroadcastReceiver ]. 

A content provider managers a shared set of app data. Through the content provider, other apps can query and modify data if the content provider allows it. While a content provider appears like a database with an API, to the system a content provider is an entry point into the app for publishing named data items, identified by a URI scheme. 

Because Android OS runs each app in a seperate process with file permission that restricts access to other apps, your app cannot directly interact with component of other apps. The operating system, however, can. To activate components in another app, you delivery your message to the OS as an Intent to start a particular component. The system than activates the component for you.

Activites, services and broadcast receiver are all activated through an intent. Intents bind individual components to each other during runtime. Content providers, on the other hand, are only activated when targeted by a request from a content resolver. The content resolver handles all direct transactions with the content provider and providers methods for the external components to interact with content providers. 



